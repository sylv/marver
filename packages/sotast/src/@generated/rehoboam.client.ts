/* eslint-disable */
// @generated by protobuf-ts 2.9.1 with parameter optimize_speed,use_proto_field_name
// @generated from protobuf file "rehoboam.proto" (package "me.sylver.marver.rehoboam", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { RehoboamService } from "./rehoboam.js";
import type { EncodeTextReply } from "./rehoboam.js";
import type { EncodeTextRequest } from "./rehoboam.js";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { EncodeImageReply } from "./rehoboam.js";
import type { EncodeImageRequest } from "./rehoboam.js";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service me.sylver.marver.rehoboam.RehoboamService
 */
export interface IRehoboamServiceClient {
    /**
     * @generated from protobuf rpc: EncodeImage(me.sylver.marver.rehoboam.EncodeImageRequest) returns (me.sylver.marver.rehoboam.EncodeImageReply);
     */
    encodeImage(input: EncodeImageRequest, options?: RpcOptions): UnaryCall<EncodeImageRequest, EncodeImageReply>;
    /**
     * @generated from protobuf rpc: EncodeText(me.sylver.marver.rehoboam.EncodeTextRequest) returns (me.sylver.marver.rehoboam.EncodeTextReply);
     */
    encodeText(input: EncodeTextRequest, options?: RpcOptions): UnaryCall<EncodeTextRequest, EncodeTextReply>;
}
/**
 * @generated from protobuf service me.sylver.marver.rehoboam.RehoboamService
 */
export class RehoboamServiceClient implements IRehoboamServiceClient, ServiceInfo {
    typeName = RehoboamService.typeName;
    methods = RehoboamService.methods;
    options = RehoboamService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: EncodeImage(me.sylver.marver.rehoboam.EncodeImageRequest) returns (me.sylver.marver.rehoboam.EncodeImageReply);
     */
    encodeImage(input: EncodeImageRequest, options?: RpcOptions): UnaryCall<EncodeImageRequest, EncodeImageReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<EncodeImageRequest, EncodeImageReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: EncodeText(me.sylver.marver.rehoboam.EncodeTextRequest) returns (me.sylver.marver.rehoboam.EncodeTextReply);
     */
    encodeText(input: EncodeTextRequest, options?: RpcOptions): UnaryCall<EncodeTextRequest, EncodeTextReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<EncodeTextRequest, EncodeTextReply>("unary", this._transport, method, opt, input);
    }
}
