# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Provides info abou the current page"""
type PageInfo {
  """Cursor referencing the beginning of the page"""
  startCursor: String!

  """Cursor referencing the end of the page"""
  endCursor: String!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type FileTag {
  tag: Tag!
  system: Boolean!
}

type Tag {
  name: ID!
}

type BoundingBox {
  x1: Float!
  y1: Float!
  x2: Float!
  y2: Float!
}

type Face {
  id: ID!
  boundingBox: BoundingBox!
  person: Person
}

type Person {
  id: ID!
  name: String!
  aliases: String!
  description: String
  birthDate: DateTime
  deathDate: DateTime
  tag: Tag!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MediaExifData {
  lensMake: String
  lensModel: String
  cameraMake: String
  cameraModel: String
  focalLength: String
  exposureTime: String
  fNumber: String
  iso: Float
  flash: String
  dateTime: DateTime
  longitude: Float
  latitude: Float
}

type MediaPoster {
  mimeType: String!
  width: Float!
  height: Float!
}

type MediaSubtitle {
  id: ID!
  languageIso639_1: String!
  hearingImpaired: Boolean!
  forced: Boolean!
  path: String!
  generated: Boolean!
  languageNameNative: String!
  languageNameEnglish: String!
  displayName: String!
}

type MediaText {
  id: ID!
  type: MediaTextType!
  text: String!
  boundingBox: BoundingBox!
  confidence: Float!
  code: String
  timestamp: Float
}

enum MediaTextType {
  OCR
  Cleaned
  Manual
  Translated
}

type MediaThumbnail {
  mimeType: String!
  width: Float!
  height: Float!
}

type MediaTimeline {
  mimeType: String!
  width: Float!
  height: Float!
}

type Media {
  file: File!
  height: Float
  width: Float
  videoCodec: String
  bitrate: Float
  framerate: Float
  durationSeconds: Float
  audioChannels: Float

  """Whether no subtitles could be generated from the audio on this video"""
  nonVerbal: Boolean

  """Whether text coudl be found in the image or video"""
  hasText: Boolean
  audioCodec: String
  hasEmbeddedSubtitles: Boolean
  hasFaces: Boolean
  isAnimated: Boolean
  thumbnail: MediaThumbnail!
  timeline: MediaTimeline!
  poster: MediaPoster!
  exifData: MediaExifData
  subtitles: [MediaSubtitle!]!
  faces: [Face!]!
  texts: [MediaText!]!
  durationFormatted: String
  previewBase64: String
  similar(after: String, first: Float, before: String, last: Float, offset: Float, type: SimilarityType): MediaConnection!
  thumbnailUrl: String
}

enum SimilarityType {
  Related
  Similar
  SameFolder
  SameType
  Images
  Videos
}

"""Provides MediaEntity item and a cursor to its position"""
type MediaEdge {
  """The position of this MediaEntity item"""
  cursor: String!
  node: Media!
}

type MediaConnection {
  """Total number of MediaEntity items"""
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [MediaEdge!]!
}

type FileInfoEmbeddable {
  size: Float!
  corrupted: Boolean!
  unavailable: Boolean!
  favourite: Boolean!
  serverCheckedAt: DateTime!
  serverCreatedAt: DateTime!
  diskModifiedAt: DateTime!
  diskCreatedAt: DateTime!
  sizeFormatted: String!
}

type File {
  id: ID!
  name: String!
  directory: String!
  path: String!
  info: FileInfoEmbeddable!
  media: Media
  mimeType: String
  extension: String
  tags: [FileTag!]!
  type: FileType
}

enum FileType {
  Image
  Video
}

"""Provides FileEntity item and a cursor to its position"""
type FileEdge {
  """The position of this FileEntity item"""
  cursor: String!
  node: File!
}

type FileConnection {
  """Total number of FileEntity items"""
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [FileEdge!]!
}

type CompletionExample {
  completion: Completion!
  example: Completion!
  similarity: Float!
}

type Completion {
  id: ID!
  type: String!
  data: JSONObject!
  errorMessage: String
  result: JSONObject

  """Examples used for this completion"""
  examples: [CompletionExample!]!
  state: CompletionState!
  alwaysInclude: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  examplesSimilarity: Float
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum CompletionState {
  PendingCompletion
  PendingVerification
  VerifiedHybrid
  VerifiedAuto
  VerifiedManual
  BuiltIn
  Error
}

"""Provides CompletionEntity item and a cursor to its position"""
type CompletionEdge {
  """The position of this CompletionEntity item"""
  cursor: String!
  node: Completion!
}

type CompletionConnection {
  """Total number of CompletionEntity items"""
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [CompletionEdge!]!
}

type Query {
  file(id: String!): File
  files(after: String, first: Float, before: String, last: Float, offset: Float, search: String): FileConnection!
  media(id: String!): Media
  mediaList(after: String, first: Float, before: String, last: Float, offset: Float, search: String, beforeDate: DateTime, afterDate: DateTime): MediaConnection!
  completions(after: String, first: Float, before: String, last: Float, offset: Float, state: CompletionState): CompletionConnection!
}

type Mutation {
  verifyCompletion(id: ID!): Completion!
  rejectCompletion(id: ID!): Completion!
}