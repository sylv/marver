# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import solomon_pb2 as solomon__pb2


class SolomonServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetImageEmbedding = channel.unary_unary(
                '/me.sylver.marver.solomon.SolomonService/GetImageEmbedding',
                request_serializer=solomon__pb2.GetImageEmbeddingRequest.SerializeToString,
                response_deserializer=solomon__pb2.GetImageEmbeddingResponse.FromString,
                )
        self.DetectFaces = channel.unary_unary(
                '/me.sylver.marver.solomon.SolomonService/DetectFaces',
                request_serializer=solomon__pb2.DetectFacesRequest.SerializeToString,
                response_deserializer=solomon__pb2.DetectFacesResponse.FromString,
                )
        self.GetOCR = channel.unary_unary(
                '/me.sylver.marver.solomon.SolomonService/GetOCR',
                request_serializer=solomon__pb2.GetOCRRequest.SerializeToString,
                response_deserializer=solomon__pb2.GetOCRResponse.FromString,
                )


class SolomonServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetImageEmbedding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetectFaces(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOCR(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SolomonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetImageEmbedding': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImageEmbedding,
                    request_deserializer=solomon__pb2.GetImageEmbeddingRequest.FromString,
                    response_serializer=solomon__pb2.GetImageEmbeddingResponse.SerializeToString,
            ),
            'DetectFaces': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectFaces,
                    request_deserializer=solomon__pb2.DetectFacesRequest.FromString,
                    response_serializer=solomon__pb2.DetectFacesResponse.SerializeToString,
            ),
            'GetOCR': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOCR,
                    request_deserializer=solomon__pb2.GetOCRRequest.FromString,
                    response_serializer=solomon__pb2.GetOCRResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'me.sylver.marver.solomon.SolomonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SolomonService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetImageEmbedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/me.sylver.marver.solomon.SolomonService/GetImageEmbedding',
            solomon__pb2.GetImageEmbeddingRequest.SerializeToString,
            solomon__pb2.GetImageEmbeddingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetectFaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/me.sylver.marver.solomon.SolomonService/DetectFaces',
            solomon__pb2.DetectFacesRequest.SerializeToString,
            solomon__pb2.DetectFacesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOCR(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/me.sylver.marver.solomon.SolomonService/GetOCR',
            solomon__pb2.GetOCRRequest.SerializeToString,
            solomon__pb2.GetOCRResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
